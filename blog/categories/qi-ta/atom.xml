<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 其他 | 谁在弹一曲东风破]]></title>
  <link href="http://macro44.github.io/blog/categories/qi-ta/atom.xml" rel="self"/>
  <link href="http://macro44.github.io/"/>
  <updated>2016-01-25T14:12:31+08:00</updated>
  <id>http://macro44.github.io/</id>
  <author>
    <name><![CDATA[Macro]]></name>
    <email><![CDATA[macro_zj@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[学习一门计算机语言的步骤]]></title>
    <link href="http://macro44.github.io/blog/2016/01/25/xue-xi-%5B%3F%5D-men-ji-suan-ji-yu-yan-de-bu-zou/"/>
    <updated>2016-01-25T11:05:44+08:00</updated>
    <id>http://macro44.github.io/blog/2016/01/25/xue-xi-[?]-men-ji-suan-ji-yu-yan-de-bu-zou</id>
    <content type="html"><![CDATA[<blockquote><p>你是否也有这样的困惑？当你学习在开发遇到瓶颈，想要在原有基础上扩展你的知识面，想要学习一门新的语言的时候，总感觉不知该怎么下手，然后拿本语法书从头到尾的去看基础语法-高级语法。但是过段时间之后再回忆你学过的语言的知识时，又感觉什么都没看，因为没有任何逻辑可言，同时因为跟现在的知识体系发生了冲突。感觉用起来很不自然。其实每门语言都有它的内在规律，怎么样系统的，有逻辑的去学一门计算机语言，我总结了一些浅薄的东西，希望能引起大家的思路，交流提出更多更好的学习新语言的法门。</p></blockquote>

<!--more-->


<p>只要分四大步来学习：<br/>
第一步：了解语言的一些作用，使用的场合，需要的基础，使用的流程<br/>
第二步：学习语言的语法以及与操作系统之间的关联操作<br/>
第三步：学习语言的内部以及外部调用<br/>
第四步：阶段性的Demo，综合性的Demo，主题编程</p>

<p>接下来我们详细的解释一下每一步的具体操作<br/>
<br/>
首先了解语言的一些作用，比如脚本语言可以作为独立应用脚本、游戏开发脚本、web开发脚本等，主体语言可以是创造出来什么样的东西，如oc可以创建iOS程序等等，有了这个认识之后，需要去知道什么样的场合需要用到这样的语言。比如lua，具我了解，可以作为oc的外嵌语言，起到原生程序动态修改部分内容的作用。这样，lua就可以作为ios程序的独立应用脚本，这就有了学习这门语言的原动力，然后就是需要的基础，学习这门语言需要怎么样的基本，比如oc是基于c语言的，那么学习oc的时候，最好有一些c的基础，开发的环境，需要什么样的软硬件支持，使用的流程，比如怎么样去写一个oc程序，这些都需要有一些最基本的了解。<br/>
<br/></p>

<p>其次是语言语法部分以及与操作系统的关联操作，<br/>
语言语法部分基本可以分为基本语法、变量、表达式、控制语句、函数、高级语法等部分<br/>
基本语法包括关键字、注释、基本输出等部分<br/>
高级语法包括文件IO，线程，数据库访问、错误信息处理、垃圾回收、是否面向对象、对系统的访问以及操控等<br/>
<br/></p>

<p>接着就是程序的内部调用，也可以说是内部通信，怎么样在一个文件中调用另一个文件，怎么样进行数据的共享等等，以及对动态库、静态库、以及数据库等的访问方式，还有就是与可能的其他语言的连接方式，怎么样做到统一、兼容。<br/>
<br/></p>

<p>最后需要做的就是通过阶段性Demo来综合性理解部分难以理解语法的运用。通过综合性的Demo来灵活运用语法，通过主题编程来尝试命题作文，来练习自己在整个语法过程中对语法的熟悉度。</p>

<p>下面运用一张思维图来概括
<img src="http://7xopon.com1.z0.glb.clouddn.com/2016012501.png" alt="实例图1" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[非零环绕规则以及奇偶规则]]></title>
    <link href="http://macro44.github.io/blog/2016/01/03/fei-ling-huan-rao-gui-ze-yi-ji-qi-ou-gui-ze/"/>
    <updated>2016-01-03T17:27:15+08:00</updated>
    <id>http://macro44.github.io/blog/2016/01/03/fei-ling-huan-rao-gui-ze-yi-ji-qi-ou-gui-ze</id>
    <content type="html"><![CDATA[<blockquote><p>在图形学中，判断一个点是否在多边形内部，如果多变边形各边之间不相交，那么可以很简单的判断出一个点是否在这个多边形内部，但是当这个多边形有自交边的话，那么情况就复杂了，需要应用非零环绕规则或奇－偶规则来判断。</p></blockquote>

<h3>问题由来：</h3>

<p>1.在学习<a href="https://macro44.github.io/blog/2015/12/03/uibezierpathxue-xi-zong-jie/">UIBezierPath</a>画路径的时候，有一个属性usesEvenOldFillRule，这个属性描述的就是是否使用奇-偶规则来渲染.<br/>
2.在学习HTML5 SVG属性的时候，碰到一个属性fill-rule，属性值可选为evenodd或者nonzero,这对应着的就是奇-偶规则和非零环绕规则.</p>

<p><b style="color:red">从上面不难看出，在涉及到多边形的图形渲染的时候，渲染规则离不开这样的判断，判断一个点或一块区域是否需要渲染。两种判断对应着两种不同的结果.</b></p>

<!--more-->


<h3>概念</h3>

<p>奇-偶规则(Odd-even Rule):奇数表示在多边形内，偶数表示在多边形外</p>

<pre><code>从任意位置p作一条射线，若与该射线相交的多边形边的数目为奇数，则p是多边形内部点，否则是外部点
</code></pre>

<p>非零环绕规则(Nonzero Winding Number Rule):若环绕数为0表示在多边形外，非零表示在多边形内</p>

<pre><code>首先使多边形的边变为矢量。将环绕数初始化为零。再从任意位置p作一条射线。当从p点沿射线方向移动时，
对在每个方向上穿过射线的边计数，每当多边形的边从右到左穿过射线时，环绕数加1，从左到右时，环绕数
减1。处理完多边形的所有相关边之后，若环绕数为非零，则p为内部点，否则，p是外部点。
</code></pre>

<p><img src="http://7xopon.com1.z0.glb.clouddn.com/201601031.gif" alt="实例图1" /><br/>
根据非零环绕规则，我们可以得出此时点在多边形内部</p>

<h3>例子:</h3>

<p><img src="http://7xopon.com1.z0.glb.clouddn.com/201601032.png" alt="实例图2" /><br/>
左边演示的是奇偶规则渲染，可以看到此时图形内演示的点在所做的射线相交的边的数量为偶数，此时，通过奇－偶规则判断这个点在图形外部。依次可以类推至图形的任意点。<br/>
右边演示的是非零环绕规则渲染。可以看到此时图中演示的点所相交的点的环绕数为2，所以此部分需要渲染，依次可以推断图形内的其他点。 <br/>
<br/>
另一个例子:<br/>
<img src="http://7xopon.com1.z0.glb.clouddn.com/201601033.png" alt="实例图3" /></p>

<h3>结论:</h3>

<p><strong>两种规则得到最后的渲染结果是不一样的。所以在实际应用的过程中一定需要根据实际需求来选择不同的规则来渲染。</strong></p>

<h3>参考:</h3>

<p><a href="http://blog.csdn.net/freshforiphone/article/details/8273023">http://blog.csdn.net/freshforiphone/article/details/8273023</a></p>
]]></content>
  </entry>
  
</feed>
