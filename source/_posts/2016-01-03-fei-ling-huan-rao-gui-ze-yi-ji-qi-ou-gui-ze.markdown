---
layout: post
title: "非零环绕规则以及奇偶规则"
date: 2016-01-03 17:27:15 +0800
comments: true
categories: 其他
---
>在图形学中，判断一个点是否在多边形内部，如果多变边形各边之间不相交，那么可以很简单的判断出一个点是否在这个多边形内部，但是当这个多边形有自交边的话，那么情况就复杂了，需要应用非零环绕规则或奇－偶规则来判断。

###问题由来：
1.在学习<a href="https://macro44.github.io/blog/2015/12/03/uibezierpathxue-xi-zong-jie/">UIBezierPath</a>画路径的时候，有一个属性usesEvenOldFillRule，这个属性描述的就是是否使用奇-偶规则来渲染.  
2.在学习HTML5 SVG属性的时候，碰到一个属性fill-rule，属性值可选为evenodd或者nonzero,这对应着的就是奇-偶规则和非零环绕规则.

<b style="color:red">从上面不难看出，在涉及到多边形的图形渲染的时候，渲染规则离不开这样的判断，判断一个点或一块区域是否需要渲染。两种判断对应着两种不同的结果.</b>

<!--more-->

###概念
奇-偶规则(Odd-even Rule):奇数表示在多边形内，偶数表示在多边形外
	
	从任意位置p作一条射线，若与该射线相交的多边形边的数目为奇数，则p是多边形内部点，否则是外部点
	
非零环绕规则(Nonzero Winding Number Rule):若环绕数为0表示在多边形外，非零表示在多边形内

	首先使多边形的边变为矢量。将环绕数初始化为零。再从任意位置p作一条射线。当从p点沿射线方向移动时，
	对在每个方向上穿过射线的边计数，每当多边形的边从右到左穿过射线时，环绕数加1，从左到右时，环绕数
	减1。处理完多边形的所有相关边之后，若环绕数为非零，则p为内部点，否则，p是外部点。
![实例图1](http://7xopon.com1.z0.glb.clouddn.com/201601031.gif)  
根据非零环绕规则，我们可以得出此时点在多边形内部
	
###例子:
![实例图2](http://7xopon.com1.z0.glb.clouddn.com/201601032.png)  
左边演示的是奇偶规则渲染，可以看到此时图形内演示的点在所做的射线相交的边的数量为偶数，此时，通过奇－偶规则判断这个点在图形外部。依次可以类推至图形的任意点。  
右边演示的是非零环绕规则渲染。可以看到此时图中演示的点所相交的点的环绕数为2，所以此部分需要渲染，依次可以推断图形内的其他点。   
<br/>
另一个例子:  
![实例图3](http://7xopon.com1.z0.glb.clouddn.com/201601033.png)

###结论:
**两种规则得到最后的渲染结果是不一样的。所以在实际应用的过程中一定需要根据实际需求来选择不同的规则来渲染。** 


###参考:
[http://blog.csdn.net/freshforiphone/article/details/8273023](http://blog.csdn.net/freshforiphone/article/details/8273023)
